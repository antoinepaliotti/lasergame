security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\Customer:
            algorithm: bcrypt
        App\Entity\Employee:
            algorithm: bcrypt

    providers:
        chain_provider:
            chain:
                providers: [employee_provider, customer_provider]

        customer_provider:
            entity:
                class: App\Entity\Customer
                property: username

        employee_provider:
            entity:
                class: App\Entity\Employee
                property: username

        in_memory: { memory: ~ }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            form_login:
              login_path: security_login
              check_path: security_login
              default_target_path: index
              username_parameter: app_login[username]
              password_parameter: app_login[password]
            provider: chain_provider
            logout_on_user_change: true
            logout:
              path: /deconnexion
              target: /login



            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

    role_hierarchy:
        ROLE_ADMIN: ROLE_EMPLOYEE
        ROLE_EMPLOYEE: ROLE_USER

